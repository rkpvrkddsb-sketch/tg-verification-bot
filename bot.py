from flask import Flask
import os
import telebot
import threading

# ===============================
# üîπ –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
BOT_TOKEN = os.environ.get("7738954223:AAGxiZQM5S11Fl-PQim0Fvuk2HcBfhnScTQ")
CHANNEL_ID = os.environ.get("-1003198292422")

if not BOT_TOKEN or not CHANNEL_ID:
    print("‚ùå BOT_TOKEN –∞–±–æ CHANNEL_ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
    exit(1)

# –ü—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ CHANNEL_ID –Ω–∞ int (–¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É)
try:
    CHANNEL_ID = int(CHANNEL_ID)
except ValueError:
    pass  # –∑–∞–ª–∏—à–∞—î–º–æ —è–∫ —Ä—è–¥–æ–∫ –¥–ª—è @username –ø—É–±–ª—ñ—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É

# ===============================
# üîπ –°—Ç–≤–æ—Ä—é—î–º–æ –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# ===============================
# üîπ –ö–æ–¥ –±–æ—Ç–∞ (–∫–Ω–æ–ø–∫–∞ "–Ø —á–µ–ª–æ–≤–µ–∫")
@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.InlineKeyboardMarkup()
    button = telebot.types.InlineKeyboardButton("–Ø —á–µ–ª–æ–≤–µ–∫", callback_data="human")
    markup.add(button)
    bot.send_message(message.chat.id,
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã —á–µ–ª–æ–≤–µ–∫ üëá",
                     reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "human")
def confirm(call):
    try:
        invite = bot.create_chat_invite_link(chat_id=CHANNEL_ID, member_limit=1)
        link = invite.invite_link if hasattr(invite, "invite_link") else invite["invite_link"]
        bot.send_message(call.message.chat.id,
                         f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!\n–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:\n{link}")
        bot.answer_callback_query(call.id, "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫!")
    except Exception as e:
        bot.send_message(call.message.chat.id,
                         "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É.")
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ invite link:", e)

# ===============================
# üîπ Flask –¥–ª—è –ø–æ—Ä—Ç—É
app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is running!"

# ===============================
# üîπ –ó–∞–ø—É—Å–∫–∞—î–º–æ polling —É —Ñ–æ–Ω—ñ
def run_bot():
    bot.polling(non_stop=True)

threading.Thread(target=run_bot).start()

# ===============================
# üîπ –ó–∞–ø—É—Å–∫–∞—î–º–æ Flask
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
